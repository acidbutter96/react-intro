{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/marcos/Documents/Celke/estudoNodejs/react-intro/src/Keys.js\";\nimport React from \"react\";\n\nclass Keys extends React.Component {\n  constructor(props) {\n    super(props);\n    this.numbers = [1, 2, 3, 4, 5];\n    /* alert(this.numbers); */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"mediumorchid\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Keys Controllers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Numberlist, {\n          numbers: this.numbers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"greenyellow\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NumberlistKey, {\n          numbers: this.numbers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction Numberlist(props) {\n  const numbers = props.numbers;\n  const listItens = numbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 45\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Pay attention, the map argument is not an anonymous function.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"By running the last function we recieve an error, it's because we need to inform an key to every li\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Numberlist;\n\nfunction NumberlistKey(props) {\n  const numbers = props.numbers;\n  const listItens = numbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: number\n  }, number.toString(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 45\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Without the key error:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Remember that the keys are uniques to brother elements, therefore they are not global, this means that we can build two list of differents arrays using the same keys.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = NumberlistKey;\nexport default Keys;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Numberlist\");\n$RefreshReg$(_c2, \"NumberlistKey\");","map":{"version":3,"sources":["/home/marcos/Documents/Celke/estudoNodejs/react-intro/src/Keys.js"],"names":["React","Keys","Component","constructor","props","numbers","render","color","Numberlist","listItens","map","number","NumberlistKey","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAI9BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAf;AACA;AACH;;AAIDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,8BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,KAAKF;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKF;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADJ;AAWH;;AAxB6B;;AA6BlC,SAASG,UAAT,CAAoBJ,KAApB,EAA0B;AACtB,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMI,SAAS,GAAGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,iBAAU;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAtB,CAAlB;AAGA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAaH;;KAlBQD,U;;AAoBT,SAASI,aAAT,CAAuBR,KAAvB,EAA6B;AACzB,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMI,SAAS,GAAGJ,OAAO,CAACK,GAAR,CAAaC,MAAD,iBAAU;AAAA,cAA6BA;AAA7B,KAASA,MAAM,CAACE,QAAP,EAAT;AAAA;AAAA;AAAA;AAAA,UAAtB,CAAlB;AAGA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACN,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA,kBADJ;AAcH;;MAnBQG,a;AAsBT,eAAeX,IAAf","sourcesContent":["import React from \"react\";\n\nclass Keys extends React.Component{\n\n    \n    \n    constructor(props){\n        super(props);\n        this.numbers = [1,2,3,4,5];\n        /* alert(this.numbers); */\n    }\n\n    \n    \n    render(){\n        return(\n            <>\n                <div style={{color:\"mediumorchid\"}}>\n                    <h1>Keys Controllers</h1>\n                    <Numberlist numbers={this.numbers}/>\n                </div>\n                <div style={{color:\"greenyellow\"}}>\n                    <NumberlistKey numbers={this.numbers}/>\n                </div>\n            </>\n        );\n    }\n}\n\n\n\nfunction Numberlist(props){\n    const numbers = props.numbers;\n    const listItens = numbers.map((number)=><li>{number}</li>);\n    \n\n    return (\n        <>\n            <h3 style={{color:'red'}}>\n                Pay attention, the map argument is not an anonymous function.\n            </h3>\n            <ul>\n                {listItens}\n            </ul>\n            <p>\n                By running the last function we recieve an error, it's because we need to inform an key to every li\n            </p>\n        </>\n    );\n}\n\nfunction NumberlistKey(props){\n    const numbers = props.numbers;\n    const listItens = numbers.map((number)=><li key={number.toString()}>{number}</li>);\n    \n\n    return (\n        <>\n            <h3 style={{color:'green'}}>\n                Without the key error:\n            </h3>\n            <ul>\n                {listItens}\n            </ul>\n            <p>\n                Remember that the keys are uniques to brother elements, therefore they are not global, this means that we can build two list of differents arrays using the same keys.\n            </p>\n            <hr/>\n        </>\n    );\n}\n\n\nexport default Keys;"]},"metadata":{},"sourceType":"module"}